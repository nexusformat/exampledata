 
import numpy as np
from nexusformat.nexus import *
 
# Note this example script was generated by nxdl_to_hdf5.py using the current 
# installed version of the NEXUS definitions ver[v2020.10] 
 
root = NXroot()

# Create the GROUPS 
root['/entry'] = NXentry()
root['/entry'].attrs['EX_required'] = 'true'
root['/entry/instrument'] = NXinstrument()
root['/entry/instrument'].attrs['EX_required'] = 'true'
root['/entry/instrument/source'] = NXsource()
root['/entry/instrument/source'].attrs['EX_required'] = 'true'
root['/entry/sample'] = NXsample()
root['/entry/sample'].attrs['EX_required'] = 'true'
root['/entry/reduction'] = NXprocess()
root['/entry/reduction'].attrs['EX_required'] = 'true'
root['/entry/reduction/input'] = NXparameters()
root['/entry/reduction/input'].attrs['EX_required'] = 'true'
root['/entry/reduction/output'] = NXparameters()
root['/entry/reduction/output'].attrs['EX_required'] = 'true'
root['/entry/data'] = NXdata()
root['/entry/data'].attrs['EX_required'] = 'true'

# Create the FIELDS 
 
root['/entry/title'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/title'].attrs['type'] = 'NX_CHAR'
root['/entry/title'].attrs['EX_required'] = 'true'
 
# Valid enumeration values for root['/entry']['definition'] are: 
#	 NXsqom
 
root['/entry/definition'] = NXfield('NXsqom')
root['/entry/definition'].attrs['type'] = 'NX_CHAR'
root['/entry/definition'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/source/type'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/instrument/source/type'].attrs['type'] = 'NX_CHAR'
root['/entry/instrument/source/type'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/source/name'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/instrument/source/name'].attrs['type'] = 'NX_CHAR'
root['/entry/instrument/source/name'].attrs['EX_required'] = 'true'
 
# Valid enumeration values for root['/entry/instrument/source']['probe'] are: 
#	 neutron
#	 x-ray
#	 electron
 
root['/entry/instrument/source/probe'] = NXfield('neutron')
root['/entry/instrument/source/probe'].attrs['type'] = 'NX_CHAR'
root['/entry/instrument/source/probe'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/name'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/instrument/name'].attrs['type'] = 'NX_CHAR'
root['/entry/instrument/name'].attrs['EX_required'] = 'true'
 
root['/entry/sample/name'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/sample/name'].attrs['type'] = 'NX_CHAR'
root['/entry/sample/name'].attrs['EX_required'] = 'true'
 
root['/entry/reduction/program'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/reduction/program'].attrs['type'] = 'NX_CHAR'
root['/entry/reduction/program'].attrs['EX_required'] = 'true'
 
root['/entry/reduction/version'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/reduction/version'].attrs['type'] = 'NX_CHAR'
root['/entry/reduction/version'].attrs['EX_required'] = 'true'
 
root['/entry/reduction/input/filenames'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/reduction/input/filenames'].attrs['type'] = 'NX_CHAR'
root['/entry/reduction/input/filenames'].attrs['EX_required'] = 'true'
 
root['/entry/data/data'] = NXfield(1)
root['/entry/data/data'].attrs['type'] = 'NX_INT'
root['/entry/data/data'].attrs['EX_required'] = 'true'
root['/entry/data/data'].attrs['signal'] = '1'
 
root['/entry/data/qx'] = NXfield(1.0)
root['/entry/data/qx'].attrs['type'] = 'NX_NUMBER'
root['/entry/data/qx'].attrs['EX_required'] = 'true'
root['/entry/data/qx'].attrs['axis'] = '1'
root['/entry/data/qx'].attrs['units'] = 'NX_WAVENUMBER'
 
root['/entry/data/qy'] = NXfield(1.0)
root['/entry/data/qy'].attrs['type'] = 'NX_NUMBER'
root['/entry/data/qy'].attrs['EX_required'] = 'true'
root['/entry/data/qy'].attrs['axis'] = '1'
root['/entry/data/qy'].attrs['units'] = 'NX_WAVENUMBER'
 
root['/entry/data/qz'] = NXfield(1.0)
root['/entry/data/qz'].attrs['type'] = 'NX_NUMBER'
root['/entry/data/qz'].attrs['EX_required'] = 'true'
root['/entry/data/qz'].attrs['axis'] = '1'
root['/entry/data/qz'].attrs['units'] = 'NX_WAVENUMBER'
 
root['/entry/data/en'] = NXfield(1.0)
root['/entry/data/en'].attrs['type'] = 'NX_FLOAT'
root['/entry/data/en'].attrs['EX_required'] = 'true'
root['/entry/data/en'].attrs['axis'] = '1'
root['/entry/data/en'].attrs['units'] = 'NX_ENERGY'

# Create the DOC strings 
root['/entry/definition'].attrs['EX_doc'] = ' Official NeXus NXDL schema to which this file conforms '
root['/entry/instrument/name'].attrs['EX_doc'] = ' Name of the instrument from which this data was reduced. '
root['/entry/sample/name'].attrs['EX_doc'] = ' Descriptive name of sample '
root['/entry/reduction/input/filenames'].attrs['EX_doc'] = ' Raw data files used to generate this I(Q) '
root['/entry/reduction/input'].attrs['EX_doc'] = ' Input parameters for the reduction program used '
root['/entry/reduction/output'].attrs['EX_doc'] = ' Eventual output parameters from the data reduction program used '
root['/entry/data/data'].attrs['EX_doc'] = ' This is the intensity for each point in QE '
root['/entry/data/qx'].attrs['EX_doc'] = ' Positions for the first dimension of Q '
root['/entry/data/qy'].attrs['EX_doc'] = ' Positions for the the second dimension of Q '
root['/entry/data/qz'].attrs['EX_doc'] = ' Positions for the the third dimension of Q '
root['/entry/data/en'].attrs['EX_doc'] = ' Values for the energy transfer for each point '
 

# Create the ATTRIBUTES 
root['/entry'].attrs['entry'] = 'SAMPLE-CHAR-DATA'
root.attrs['default'] = 'entry'
root['/entry/data'].set_default()
root['/entry/data'].attrs['signal'] = 'data'
root['/entry/data/data'].attrs['signal'] = '1'

# Save the file
root.save('NXsqom.nxs', 'w')


