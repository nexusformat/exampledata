from nexusformat.nexus import *
 
# Note this example script was generated by nxdl_to_hdf5.py using the current 
# installed version of the NEXUS definitions ver[v2020.10] 
 
root = NXroot()
root['/entry'] = NXentry()
root['/entry'].attrs['EX_required'] = 'true'
root['/entry/instrument'] = NXinstrument()
root['/entry/instrument'].attrs['EX_required'] = 'true'
root['/entry/instrument/source'] = NXsource()
root['/entry/instrument/source'].attrs['EX_required'] = 'true'
root['/entry/instrument/bright_field'] = NXdetector()
root['/entry/instrument/bright_field'].attrs['EX_required'] = 'true'
root['/entry/instrument/dark_field'] = NXdetector()
root['/entry/instrument/dark_field'].attrs['EX_required'] = 'true'
root['/entry/instrument/sample'] = NXdetector()
root['/entry/instrument/sample'].attrs['EX_required'] = 'true'
root['/entry/sample'] = NXsample()
root['/entry/sample'].attrs['EX_required'] = 'true'
root['/entry/control'] = NXmonitor()
root['/entry/control'].attrs['EX_required'] = 'true'
root['/entry/data'] = NXdata()
root['/entry/data'].attrs['EX_required'] = 'true'
 
root['/entry/title'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/title'].attrs['type'] = 'NX_CHAR'
root['/entry/title'].attrs['EX_required'] = 'true'
 
root['/entry/start_time'] = NXfield('2021-03-29T13:50:58.839424')
root['/entry/start_time'].attrs['type'] = 'NX_DATE_TIME'
root['/entry/start_time'].attrs['EX_required'] = 'true'
 
root['/entry/end_time'] = NXfield('2021-03-29T13:50:58.843424')
root['/entry/end_time'].attrs['type'] = 'NX_DATE_TIME'
root['/entry/end_time'].attrs['EX_required'] = 'true'
 
# Valid enumeration values for root['/entry']['definition'] are: 
#	 NXtomophase
 
root['/entry/definition'] = NXfield('NXtomophase')
root['/entry/definition'].attrs['type'] = 'NX_CHAR'
root['/entry/definition'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/source/type'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/instrument/source/type'].attrs['type'] = 'NX_CHAR'
root['/entry/instrument/source/type'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/source/name'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/instrument/source/name'].attrs['type'] = 'NX_CHAR'
root['/entry/instrument/source/name'].attrs['EX_required'] = 'true'
 
# Valid enumeration values for root['/entry/instrument/source']['probe'] are: 
#	 neutron
#	 x-ray
#	 electron
 
root['/entry/instrument/source/probe'] = NXfield('neutron')
root['/entry/instrument/source/probe'].attrs['type'] = 'NX_CHAR'
root['/entry/instrument/source/probe'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/bright_field/data'] = NXfield(1)
root['/entry/instrument/bright_field/data'].attrs['type'] = 'NX_INT'
root['/entry/instrument/bright_field/data'].attrs['EX_required'] = 'true'
root['/entry/instrument/bright_field/data'].attrs['signal'] = '1'
 
root['/entry/instrument/bright_field/sequence_number'] = NXfield(1)
root['/entry/instrument/bright_field/sequence_number'].attrs['type'] = 'NX_INT'
root['/entry/instrument/bright_field/sequence_number'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/dark_field/data'] = NXfield(1)
root['/entry/instrument/dark_field/data'].attrs['type'] = 'NX_INT'
root['/entry/instrument/dark_field/data'].attrs['EX_required'] = 'true'
root['/entry/instrument/dark_field/data'].attrs['signal'] = '1'
 
root['/entry/instrument/dark_field/sequence_number'] = NXfield(1)
root['/entry/instrument/dark_field/sequence_number'].attrs['type'] = 'NX_INT'
root['/entry/instrument/dark_field/sequence_number'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/sample/data'] = NXfield(1)
root['/entry/instrument/sample/data'].attrs['type'] = 'NX_INT'
root['/entry/instrument/sample/data'].attrs['EX_required'] = 'true'
root['/entry/instrument/sample/data'].attrs['signal'] = '1'
 
root['/entry/instrument/sample/sequence_number'] = NXfield(1)
root['/entry/instrument/sample/sequence_number'].attrs['type'] = 'NX_INT'
root['/entry/instrument/sample/sequence_number'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/sample/x_pixel_size'] = NXfield(1.0)
root['/entry/instrument/sample/x_pixel_size'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/sample/x_pixel_size'].attrs['EX_required'] = 'true'
root['/entry/instrument/sample/x_pixel_size'].attrs['units'] = 'NX_LENGTH'
 
root['/entry/instrument/sample/y_pixel_size'] = NXfield(1.0)
root['/entry/instrument/sample/y_pixel_size'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/sample/y_pixel_size'].attrs['EX_required'] = 'true'
root['/entry/instrument/sample/y_pixel_size'].attrs['units'] = 'NX_LENGTH'
 
root['/entry/instrument/sample/distance'] = NXfield(1.0)
root['/entry/instrument/sample/distance'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/sample/distance'].attrs['EX_required'] = 'true'
root['/entry/instrument/sample/distance'].attrs['units'] = 'NX_LENGTH'
 
root['/entry/sample/name'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/sample/name'].attrs['type'] = 'NX_CHAR'
root['/entry/sample/name'].attrs['EX_required'] = 'true'
 
root['/entry/sample/rotation_angle'] = NXfield(1.0)
root['/entry/sample/rotation_angle'].attrs['type'] = 'NX_FLOAT'
root['/entry/sample/rotation_angle'].attrs['EX_required'] = 'true'
root['/entry/sample/rotation_angle'].attrs['axis'] = '1'
root['/entry/sample/rotation_angle'].attrs['units'] = 'NX_ANGLE'
 
root['/entry/sample/x_translation'] = NXfield(1.0)
root['/entry/sample/x_translation'].attrs['type'] = 'NX_FLOAT'
root['/entry/sample/x_translation'].attrs['EX_required'] = 'true'
root['/entry/sample/x_translation'].attrs['units'] = 'NX_LENGTH'
 
root['/entry/sample/y_translation'] = NXfield(1.0)
root['/entry/sample/y_translation'].attrs['type'] = 'NX_FLOAT'
root['/entry/sample/y_translation'].attrs['EX_required'] = 'true'
root['/entry/sample/y_translation'].attrs['units'] = 'NX_LENGTH'
 
root['/entry/sample/z_translation'] = NXfield(1.0)
root['/entry/sample/z_translation'].attrs['type'] = 'NX_FLOAT'
root['/entry/sample/z_translation'].attrs['EX_required'] = 'true'
root['/entry/sample/z_translation'].attrs['units'] = 'NX_LENGTH'
 
root['/entry/control/integral'] = NXfield(1.0)
root['/entry/control/integral'].attrs['type'] = 'NX_FLOAT'
root['/entry/control/integral'].attrs['EX_required'] = 'true'
root['/entry/control/integral'].attrs['units'] = 'NX_ANY'
 
# Create the soft links 
root['/entry/data/data'] = NXlink(target='/entry/instrument/sample/data')
 
# Create the soft links 
root['/entry/data/rotation_angle'] = NXlink(target='/entry/sample/rotation_angle')
 
# Assign all of the doc strings
root['/entry/definition'].attrs['EX_doc'] = ' Official NeXus NXDL schema to which this file conforms '
root['/entry/instrument/sample/distance'].attrs['EX_doc'] = ' Distance between detector and sample '
root['/entry/sample/name'].attrs['EX_doc'] = ' Descriptive name of sample '
root['/entry/control/integral'].attrs['EX_doc'] = ' Total integral monitor counts for each measured frame. Allows a correction for fluctuations in the beam between frames. '
 
root.attrs['default'] = 'entry'
root['/entry/data'].set_default()
root['/entry/data'].attrs['signal'] = 'data'
root['/entry/data/data'].attrs['signal'] = '1'
root.save('NXtomophase.nxs', 'w')


