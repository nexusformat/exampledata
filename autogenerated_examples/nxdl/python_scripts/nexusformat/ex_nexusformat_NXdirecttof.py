import os
import datetime
import numpy as np
import h5py
import nexusformat
from nexusformat.nexus import *
# Note this example script was generated by nxdl_to_hdf5.py using the current 
# installed version of the NEXUS definitions ver[v2020.10] 
 
root = NXroot()
root['/entry'] = NXentry()
root['/entry'].attrs['NX_class'] = 'NXentry'
root['/entry'].attrs['EX_required'] = 'true'
root['/entry/user'] = NXuser()
root['/entry/user'].attrs['NX_class'] = 'NXuser'
root['/entry/user'].attrs['EX_required'] = 'true'
root['/entry/instrument'] = NXinstrument()
root['/entry/instrument'].attrs['NX_class'] = 'NXinstrument'
root['/entry/instrument'].attrs['EX_required'] = 'true'
root['/entry/instrument/detector'] = NXdetector()
root['/entry/instrument/detector'].attrs['NX_class'] = 'NXdetector'
root['/entry/instrument/detector'].attrs['EX_required'] = 'true'
root['/entry/sample'] = NXsample()
root['/entry/sample'].attrs['NX_class'] = 'NXsample'
root['/entry/sample'].attrs['EX_required'] = 'true'
root['/entry/monitor'] = NXmonitor()
root['/entry/monitor'].attrs['NX_class'] = 'NXmonitor'
root['/entry/monitor'].attrs['EX_required'] = 'true'
root['/entry/data'] = NXdata()
root['/entry/data'].attrs['NX_class'] = 'NXdata'
root['/entry/data'].attrs['EX_required'] = 'true'
root['/entry/instrument/fermi_chopper'] = NXfermi_chopper()
root['/entry/instrument/fermi_chopper'].attrs['NX_class'] = 'NXfermi_chopper'
root['/entry/instrument/fermi_chopper'].attrs['EX_required'] = 'false'
root['/entry/instrument/disk_chopper'] = NXdisk_chopper()
root['/entry/instrument/disk_chopper'].attrs['NX_class'] = 'NXdisk_chopper'
root['/entry/instrument/disk_chopper'].attrs['EX_required'] = 'false'
 
root['/entry/title'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/title'].attrs['type'] = 'NX_CHAR'
root['/entry/title'].attrs['EX_required'] = 'true'
 
root['/entry/start_time'] = NXfield('2021-03-26T13:07:50.199941')
root['/entry/start_time'].attrs['type'] = 'NX_DATE_TIME'
root['/entry/start_time'].attrs['EX_required'] = 'true'
 
# Valid enumeration values for root['/entry']['definition'] are: 
#	 NXdirecttof
 
root['/entry/definition'] = NXfield('NXtofraw')
root['/entry/definition'].attrs['type'] = 'NX_CHAR'
root['/entry/definition'].attrs['EX_required'] = 'true'
 
root['/entry/duration'] = NXfield(1.0)
root['/entry/duration'].attrs['type'] = 'NX_FLOAT'
root['/entry/duration'].attrs['EX_required'] = 'true'
 
root['/entry/run_number'] = NXfield(1)
root['/entry/run_number'].attrs['type'] = 'NX_INT'
root['/entry/run_number'].attrs['EX_required'] = 'true'
 
root['/entry/pre_sample_flightpath'] = NXfield(1.0)
root['/entry/pre_sample_flightpath'].attrs['type'] = 'NX_FLOAT'
root['/entry/pre_sample_flightpath'].attrs['EX_required'] = 'true'
root['/entry/pre_sample_flightpath'].attrs['units'] = 'NX_LENGTH'
 
root['/entry/user/name'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/user/name'].attrs['type'] = 'NX_CHAR'
root['/entry/user/name'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/detector/data'] = NXfield(1)
root['/entry/instrument/detector/data'].attrs['type'] = 'NX_INT'
root['/entry/instrument/detector/data'].attrs['EX_required'] = 'true'
root['/entry/instrument/detector/data'].attrs['signal'] = '1'
 
root['/entry/instrument/detector/detector_number'] = NXfield(1)
root['/entry/instrument/detector/detector_number'].attrs['type'] = 'NX_INT'
root['/entry/instrument/detector/detector_number'].attrs['EX_required'] = 'true'
root['/entry/instrument/detector/detector_number'].attrs['axis'] = '2'
 
root['/entry/instrument/detector/distance'] = NXfield(1.0)
root['/entry/instrument/detector/distance'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/detector/distance'].attrs['EX_required'] = 'true'
root['/entry/instrument/detector/distance'].attrs['units'] = 'NX_LENGTH'
 
root['/entry/instrument/detector/time_of_flight'] = NXfield(1.0)
root['/entry/instrument/detector/time_of_flight'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/detector/time_of_flight'].attrs['EX_required'] = 'true'
root['/entry/instrument/detector/time_of_flight'].attrs['axis'] = '1'
root['/entry/instrument/detector/time_of_flight'].attrs['units'] = 'NX_TIME_OF_FLIGHT'
 
root['/entry/instrument/detector/polar_angle'] = NXfield(1.0)
root['/entry/instrument/detector/polar_angle'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/detector/polar_angle'].attrs['EX_required'] = 'true'
root['/entry/instrument/detector/polar_angle'].attrs['units'] = 'NX_ANGLE'
 
root['/entry/instrument/detector/azimuthal_angle'] = NXfield(1.0)
root['/entry/instrument/detector/azimuthal_angle'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/detector/azimuthal_angle'].attrs['EX_required'] = 'true'
root['/entry/instrument/detector/azimuthal_angle'].attrs['units'] = 'NX_ANGLE'
 
root['/entry/sample/name'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/sample/name'].attrs['type'] = 'NX_CHAR'
root['/entry/sample/name'].attrs['EX_required'] = 'true'
 
# Valid enumeration values for root['/entry/sample']['nature'] are: 
#	 powder
#	 liquid
#	 single crystal
 
root['/entry/sample/nature'] = NXfield('powder')
root['/entry/sample/nature'].attrs['type'] = 'NX_CHAR'
root['/entry/sample/nature'].attrs['EX_required'] = 'true'
 
# Valid enumeration values for root['/entry/monitor']['mode'] are: 
#	 monitor
#	 timer
 
root['/entry/monitor/mode'] = NXfield('monitor')
root['/entry/monitor/mode'].attrs['type'] = 'NX_CHAR'
root['/entry/monitor/mode'].attrs['EX_required'] = 'true'
 
root['/entry/monitor/preset'] = NXfield(1.0)
root['/entry/monitor/preset'].attrs['type'] = 'NX_FLOAT'
root['/entry/monitor/preset'].attrs['EX_required'] = 'true'
 
root['/entry/monitor/distance'] = NXfield(1.0)
root['/entry/monitor/distance'].attrs['type'] = 'NX_FLOAT'
root['/entry/monitor/distance'].attrs['EX_required'] = 'true'
root['/entry/monitor/distance'].attrs['units'] = 'NX_LENGTH'
 
root['/entry/monitor/data'] = NXfield(1)
root['/entry/monitor/data'].attrs['type'] = 'NX_INT'
root['/entry/monitor/data'].attrs['EX_required'] = 'true'
root['/entry/monitor/data'].attrs['signal'] = '1'
 
root['/entry/monitor/time_of_flight'] = NXfield(1.0)
root['/entry/monitor/time_of_flight'].attrs['type'] = 'NX_FLOAT'
root['/entry/monitor/time_of_flight'].attrs['EX_required'] = 'true'
root['/entry/monitor/time_of_flight'].attrs['axis'] = '1'
root['/entry/monitor/time_of_flight'].attrs['units'] = 'NX_TIME_OF_FLIGHT'
 
root['/entry/monitor/integral_counts'] = NXfield(1)
root['/entry/monitor/integral_counts'].attrs['type'] = 'NX_INT'
root['/entry/monitor/integral_counts'].attrs['EX_required'] = 'true'
root['/entry/monitor/integral_counts'].attrs['units'] = 'NX_UNITLESS'
 
root['/entry/instrument/fermi_chopper/rotation_speed'] = NXfield(1.0)
root['/entry/instrument/fermi_chopper/rotation_speed'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/fermi_chopper/rotation_speed'].attrs['EX_required'] = 'true'
root['/entry/instrument/fermi_chopper/rotation_speed'].attrs['units'] = 'NX_FREQUENCY'
 
root['/entry/instrument/fermi_chopper/energy'] = NXfield(1.0)
root['/entry/instrument/fermi_chopper/energy'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/fermi_chopper/energy'].attrs['EX_required'] = 'true'
root['/entry/instrument/fermi_chopper/energy'].attrs['units'] = 'NX_ENERGY'
 
root['/entry/instrument/disk_chopper/rotation_speed'] = NXfield(1.0)
root['/entry/instrument/disk_chopper/rotation_speed'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/disk_chopper/rotation_speed'].attrs['EX_required'] = 'true'
root['/entry/instrument/disk_chopper/rotation_speed'].attrs['units'] = 'NX_FREQUENCY'
 
root['/entry/instrument/disk_chopper/energy'] = NXfield(1.0)
root['/entry/instrument/disk_chopper/energy'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/disk_chopper/energy'].attrs['EX_required'] = 'true'
root['/entry/instrument/disk_chopper/energy'].attrs['units'] = 'NX_ENERGY'
 
root['/entry/data/data'] = NXlink(target='/entry/instrument/detector/data')
 
root['/entry/data/detector_number'] = NXlink(target='/entry/instrument/detector/detector_number')
 
root['/entry/data/time_of_flight'] = NXlink(target='/entry/instrument/detector/time_of_flight')
 
root.attrs['default'] = 'entry'
root['/entry/data'].set_default()
root['/entry/data'].attrs['signal'] = 'data'
root['/entry/data/data'].attrs['signal'] = '1'
root.attrs['file_name'] = os.path.abspath('NXdirecttof')
root.attrs['file_time'] = datetime.datetime.now().isoformat()
root.attrs['nexusformat_version'] = nexusformat.__version__
root.attrs['HDF5_Version'] = h5py.version.hdf5_version
root.save('nexusformat_NXdirecttof.h5', 'w')


