import os
import datetime
import numpy as np
import h5py
import nexusformat
from nexusformat.nexus import *
# Note this example script was generated by nxdl_to_hdf5.py using the current 
# installed version of the NEXUS definitions ver[v2020.10] 
 
root = NXroot()
root['/entry'] = NXentry()
root['/entry'].attrs['NX_class'] = 'NXentry'
root['/entry'].attrs['EX_required'] = 'true'
root['/entry/instrument'] = NXinstrument()
root['/entry/instrument'].attrs['NX_class'] = 'NXinstrument'
root['/entry/instrument'].attrs['EX_required'] = 'true'
root['/entry/instrument/source'] = NXsource()
root['/entry/instrument/source'].attrs['NX_class'] = 'NXsource'
root['/entry/instrument/source'].attrs['EX_required'] = 'true'
root['/entry/instrument/monochromator'] = NXmonochromator()
root['/entry/instrument/monochromator'].attrs['NX_class'] = 'NXmonochromator'
root['/entry/instrument/monochromator'].attrs['EX_required'] = 'true'
root['/entry/instrument/detector'] = NXdetector()
root['/entry/instrument/detector'].attrs['NX_class'] = 'NXdetector'
root['/entry/instrument/detector'].attrs['EX_required'] = 'true'
root['/entry/instrument/sample_x'] = NXdetector()
root['/entry/instrument/sample_x'].attrs['NX_class'] = 'NXdetector'
root['/entry/instrument/sample_x'].attrs['EX_required'] = 'false'
root['/entry/instrument/sample_y'] = NXdetector()
root['/entry/instrument/sample_y'].attrs['NX_class'] = 'NXdetector'
root['/entry/instrument/sample_y'].attrs['EX_required'] = 'false'
root['/entry/instrument/sample_z'] = NXdetector()
root['/entry/instrument/sample_z'].attrs['NX_class'] = 'NXdetector'
root['/entry/instrument/sample_z'].attrs['EX_required'] = 'false'
root['/entry/sample'] = NXsample()
root['/entry/sample'].attrs['NX_class'] = 'NXsample'
root['/entry/sample'].attrs['EX_required'] = 'true'
root['/entry/data'] = NXdata()
root['/entry/data'].attrs['NX_class'] = 'NXdata'
root['/entry/data'].attrs['EX_required'] = 'true'
root['/entry/control'] = NXmonitor()
root['/entry/control'].attrs['NX_class'] = 'NXmonitor'
root['/entry/control'].attrs['EX_required'] = 'false'
 
root['/entry/title'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/title'].attrs['type'] = 'NX_CHAR'
root['/entry/title'].attrs['EX_required'] = 'true'
 
root['/entry/start_time'] = NXfield('2021-03-26T13:07:55.630585')
root['/entry/start_time'].attrs['type'] = 'NX_DATE_TIME'
root['/entry/start_time'].attrs['EX_required'] = 'true'
 
root['/entry/end_time'] = NXfield('2021-03-26T13:07:55.632583')
root['/entry/end_time'].attrs['type'] = 'NX_DATE_TIME'
root['/entry/end_time'].attrs['EX_required'] = 'true'
 
# Valid enumeration values for root['/entry']['definition'] are: 
#	 NXstxm
 
root['/entry/definition'] = NXfield('NXstxm')
root['/entry/definition'].attrs['type'] = 'NX_CHAR'
root['/entry/definition'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/source/type'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/instrument/source/type'].attrs['type'] = 'NX_CHAR'
root['/entry/instrument/source/type'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/source/name'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/instrument/source/name'].attrs['type'] = 'NX_CHAR'
root['/entry/instrument/source/name'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/source/probe'] = NXfield('SAMPLE-CHAR-DATA')
root['/entry/instrument/source/probe'].attrs['type'] = 'NX_CHAR'
root['/entry/instrument/source/probe'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/monochromator/energy'] = NXfield(1.0)
root['/entry/instrument/monochromator/energy'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/monochromator/energy'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/detector/data'] = NXfield(1.0)
root['/entry/instrument/detector/data'].attrs['type'] = 'NX_NUMBER'
root['/entry/instrument/detector/data'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/sample_x/data'] = NXfield(1.0)
root['/entry/instrument/sample_x/data'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/sample_x/data'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/sample_y/data'] = NXfield(1.0)
root['/entry/instrument/sample_y/data'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/sample_y/data'].attrs['EX_required'] = 'true'
 
root['/entry/instrument/sample_z/data'] = NXfield(1.0)
root['/entry/instrument/sample_z/data'].attrs['type'] = 'NX_FLOAT'
root['/entry/instrument/sample_z/data'].attrs['EX_required'] = 'true'
 
root['/entry/sample/rotation_angle'] = NXfield(1.0)
root['/entry/sample/rotation_angle'].attrs['type'] = 'NX_FLOAT'
root['/entry/sample/rotation_angle'].attrs['EX_required'] = 'true'
 
# Valid enumeration values for root['/entry/data']['stxm_scan_type'] are: 
#	 sample point spectrum
#	 sample line spectrum
#	 sample image
#	 sample image stack
#	 sample focus
#	 osa image
#	 osa focus
#	 detector image
#	 generic scan
 
root['/entry/data/stxm_scan_type'] = NXfield('sample point spectrum')
root['/entry/data/stxm_scan_type'].attrs['type'] = 'NX_CHAR'
root['/entry/data/stxm_scan_type'].attrs['EX_required'] = 'true'
 
root['/entry/data/data'] = NXfield(1.0)
root['/entry/data/data'].attrs['type'] = 'NX_NUMBER'
root['/entry/data/data'].attrs['EX_required'] = 'true'
root['/entry/data/data'].attrs['signal'] = '1'
 
root['/entry/data/energy'] = NXfield(1.0)
root['/entry/data/energy'].attrs['type'] = 'NX_FLOAT'
root['/entry/data/energy'].attrs['EX_required'] = 'true'
 
root['/entry/data/sample_y'] = NXfield(1.0)
root['/entry/data/sample_y'].attrs['type'] = 'NX_FLOAT'
root['/entry/data/sample_y'].attrs['EX_required'] = 'true'
 
root['/entry/data/sample_x'] = NXfield(1.0)
root['/entry/data/sample_x'].attrs['type'] = 'NX_FLOAT'
root['/entry/data/sample_x'].attrs['EX_required'] = 'true'
 
root['/entry/control/data'] = NXfield(1.0)
root['/entry/control/data'].attrs['type'] = 'NX_FLOAT'
root['/entry/control/data'].attrs['EX_required'] = 'true'
 
root.attrs['default'] = 'entry'
root['/entry/data'].set_default()
root['/entry/data'].attrs['signal'] = 'data'
root['/entry/data/data'].attrs['signal'] = '1'
root.attrs['file_name'] = os.path.abspath('NXstxm')
root.attrs['file_time'] = datetime.datetime.now().isoformat()
root.attrs['nexusformat_version'] = nexusformat.__version__
root.attrs['HDF5_Version'] = h5py.version.hdf5_version
root.save('nexusformat_NXstxm.h5', 'w')


