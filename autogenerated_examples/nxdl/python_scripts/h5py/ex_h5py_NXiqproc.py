 
import numpy as np
import datetime
import h5py
import os
 
# Note this example script was generated by nxdl_to_hdf5.py using the current 
# installed version of the NEXUS definitions ver[v2020.10] 
 
root = h5py.File('h5py_NXiqproc.h5', 'w')
 
root.create_group('untitled_entry')
root['/untitled_entry'].attrs['NX_class'] = 'NXentry'
root['/untitled_entry'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/'].create_group('instrument')
root['/untitled_entry/instrument'].attrs['NX_class'] = 'NXinstrument'
root['/untitled_entry/instrument'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/instrument/'].create_group('untitled_source')
root['/untitled_entry/instrument/untitled_source'].attrs['NX_class'] = 'NXsource'
root['/untitled_entry/instrument/untitled_source'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/'].create_group('untitled_sample')
root['/untitled_entry/untitled_sample'].attrs['NX_class'] = 'NXsample'
root['/untitled_entry/untitled_sample'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/'].create_group('reduction')
root['/untitled_entry/reduction'].attrs['NX_class'] = 'NXprocess'
root['/untitled_entry/reduction'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/reduction/'].create_group('input')
root['/untitled_entry/reduction/input'].attrs['NX_class'] = 'NXparameters'
root['/untitled_entry/reduction/input'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/reduction/'].create_group('output')
root['/untitled_entry/reduction/output'].attrs['NX_class'] = 'NXparameters'
root['/untitled_entry/reduction/output'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/'].create_group('untitled_data')
root['/untitled_entry/untitled_data'].attrs['NX_class'] = 'NXdata'
root['/untitled_entry/untitled_data'].attrs['EX_required'] = 'true'
 
root['/untitled_entry'].create_dataset(name='title', data=1.0, maxshape=None)
root['/untitled_entry/title'].attrs['type'] = 'NX_FLOAT'
root['/untitled_entry/title'].attrs['EX_required'] = 'true'
 
# Valid enumeration values for root['/untitled_entry']['definition'] are: 
#	 NXiqproc
 
root['/untitled_entry'].create_dataset(name='definition', data='NXiqproc', maxshape=None)
root['/untitled_entry/definition'].attrs['type'] = 'NX_FLOAT'
root['/untitled_entry/definition'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/instrument/untitled_source'].create_dataset(name='type', data=1.0, maxshape=None)
root['/untitled_entry/instrument/untitled_source/type'].attrs['type'] = 'NX_FLOAT'
root['/untitled_entry/instrument/untitled_source/type'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/instrument/untitled_source'].create_dataset(name='name', data=1.0, maxshape=None)
root['/untitled_entry/instrument/untitled_source/name'].attrs['type'] = 'NX_FLOAT'
root['/untitled_entry/instrument/untitled_source/name'].attrs['EX_required'] = 'true'
 
# Valid enumeration values for root['/untitled_entry/instrument/untitled_source']['probe'] are: 
#	 neutron
#	 x-ray
#	 electron
 
root['/untitled_entry/instrument/untitled_source'].create_dataset(name='probe', data='neutron', maxshape=None)
root['/untitled_entry/instrument/untitled_source/probe'].attrs['type'] = 'NX_FLOAT'
root['/untitled_entry/instrument/untitled_source/probe'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/instrument'].create_dataset(name='name', data='!some char data!', maxshape=None)
root['/untitled_entry/instrument/name'].attrs['type'] = 'NX_CHAR'
root['/untitled_entry/instrument/name'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/untitled_sample'].create_dataset(name='name', data='!some char data!', maxshape=None)
root['/untitled_entry/untitled_sample/name'].attrs['type'] = 'NX_CHAR'
root['/untitled_entry/untitled_sample/name'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/reduction'].create_dataset(name='program', data='!some char data!', maxshape=None)
root['/untitled_entry/reduction/program'].attrs['type'] = 'NX_CHAR'
root['/untitled_entry/reduction/program'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/reduction'].create_dataset(name='version', data='!some char data!', maxshape=None)
root['/untitled_entry/reduction/version'].attrs['type'] = 'NX_CHAR'
root['/untitled_entry/reduction/version'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/reduction/input'].create_dataset(name='filenames', data='!some char data!', maxshape=None)
root['/untitled_entry/reduction/input/filenames'].attrs['type'] = 'NX_CHAR'
root['/untitled_entry/reduction/input/filenames'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/untitled_data'].create_dataset(name='data', data=[np.array([[1]])], maxshape=None)
root['/untitled_entry/untitled_data/data'].attrs['type'] = 'NX_INT'
root['/untitled_entry/untitled_data/data'].attrs['EX_required'] = 'true'
root['/untitled_entry/untitled_data/data'].attrs['signal'] = '1'
 
root['/untitled_entry/untitled_data'].create_dataset(name='variable', data=[1], maxshape=None, compression="gzip")
root['/untitled_entry/untitled_data/variable'].attrs['type'] = 'NX_NUMBER'
root['/untitled_entry/untitled_data/variable'].attrs['EX_required'] = 'true'
root['/untitled_entry/untitled_data/variable'].attrs['axis'] = '1'
 
root['/untitled_entry/untitled_data'].create_dataset(name='qx', data=[1], maxshape=None, compression="gzip")
root['/untitled_entry/untitled_data/qx'].attrs['type'] = 'NX_NUMBER'
root['/untitled_entry/untitled_data/qx'].attrs['EX_required'] = 'true'
root['/untitled_entry/untitled_data/qx'].attrs['axis'] = '2'
 
root['/untitled_entry/untitled_data'].create_dataset(name='qy', data=[1], maxshape=None, compression="gzip")
root['/untitled_entry/untitled_data/qy'].attrs['type'] = 'NX_NUMBER'
root['/untitled_entry/untitled_data/qy'].attrs['EX_required'] = 'true'
root['/untitled_entry/untitled_data/qy'].attrs['axis'] = '3'
root['/untitled_entry/definition'].attrs['EX_doc'] = '     Official NeXus NXDL schema to which this file conforms    '
root['/untitled_entry/instrument/name'].attrs['EX_doc'] = '      Name of the instrument from which this data was reduced.     '
root['/untitled_entry/untitled_sample/name'].attrs['EX_doc'] = '      Descriptive name of sample     '
root['/untitled_entry/reduction/input/filenames'].attrs['EX_doc'] = '       Raw data files used to generate this I(Q)      '
root['/untitled_entry/reduction/input'].attrs['EX_doc'] = '      Input parameters for the reduction program used     '
root['/untitled_entry/reduction/output'].attrs['EX_doc'] = '      Eventual output parameters from the data reduction program used     '
root['/untitled_entry/untitled_data/data'].attrs['EX_doc'] = '      This is I(Q). The client has to analyse the dimensions                 of I(Q). Often, multiple I(Q) for various environment                 conditions are measured; that would be the first                 dimension. Q can be multidimensional, this accounts for                 the further dimensions in the data     '
root['/untitled_entry/untitled_data/qx'].attrs['EX_doc'] = '      Values for the first dimension of Q     '
root['/untitled_entry/untitled_data/qy'].attrs['EX_doc'] = '      Values for the second dimension of Q     '
root['/untitled_entry'].attrs['entry'] = '!some char data!'
root['/untitled_entry/untitled_data/variable'].attrs['varied_variable'] = '!some char data!'
root['/'].attrs['default'] = 'untitled_entry'
root['/untitled_entry'].attrs['default'] = 'untitled_data'
root['/untitled_entry/untitled_data'].attrs['signal'] = 'data'
root['/untitled_entry/untitled_data/data'].attrs['signal'] = '1'
root.attrs['file_name'] = os.path.abspath('NXiqproc')
root.attrs['file_time'] = datetime.datetime.now().isoformat()
root.attrs['h5py_version'] = h5py.version.version
root.attrs['HDF5_Version'] = h5py.version.hdf5_version
root.close()


