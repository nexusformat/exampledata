 
import numpy as np
import datetime
import h5py
import os
 
# Note this example script was generated by nxdl_to_hdf5.py using the current 
# installed version of the NEXUS definitions ver[v2020.10] 
 
root = h5py.File('h5py_NXscan.h5', 'w')
 
root.create_group('untitled_entry')
root['/untitled_entry'].attrs['NX_class'] = 'NXentry'
root['/untitled_entry'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/'].create_group('untitled_instrument')
root['/untitled_entry/untitled_instrument'].attrs['NX_class'] = 'NXinstrument'
root['/untitled_entry/untitled_instrument'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/untitled_instrument/'].create_group('untitled_detector')
root['/untitled_entry/untitled_instrument/untitled_detector'].attrs['NX_class'] = 'NXdetector'
root['/untitled_entry/untitled_instrument/untitled_detector'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/'].create_group('untitled_sample')
root['/untitled_entry/untitled_sample'].attrs['NX_class'] = 'NXsample'
root['/untitled_entry/untitled_sample'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/'].create_group('untitled_monitor')
root['/untitled_entry/untitled_monitor'].attrs['NX_class'] = 'NXmonitor'
root['/untitled_entry/untitled_monitor'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/'].create_group('untitled_data')
root['/untitled_entry/untitled_data'].attrs['NX_class'] = 'NXdata'
root['/untitled_entry/untitled_data'].attrs['EX_required'] = 'true'
 
root['/untitled_entry'].create_dataset(name='title', data='!some char data!', maxshape=None)
root['/untitled_entry/title'].attrs['type'] = 'NX_CHAR'
root['/untitled_entry/title'].attrs['units'] = ''
root['/untitled_entry/title'].attrs['EX_required'] = 'true'
 
root['/untitled_entry'].create_dataset(name='start_time', data='2021-03-22T14:00:28.012943', maxshape=None)
root['/untitled_entry/start_time'].attrs['type'] = 'NX_DATE_TIME'
root['/untitled_entry/start_time'].attrs['units'] = ''
root['/untitled_entry/start_time'].attrs['EX_required'] = 'true'
 
root['/untitled_entry'].create_dataset(name='end_time', data='2021-03-22T14:00:28.014944', maxshape=None)
root['/untitled_entry/end_time'].attrs['type'] = 'NX_DATE_TIME'
root['/untitled_entry/end_time'].attrs['units'] = ''
root['/untitled_entry/end_time'].attrs['EX_required'] = 'true'
 
# Valid enumeration values for root['/untitled_entry']['definition'] are: 
#	 NXscan
 
root['/untitled_entry'].create_dataset(name='definition', data='NXscan', maxshape=None)
root['/untitled_entry/definition'].attrs['type'] = 'NX_CHAR'
root['/untitled_entry/definition'].attrs['units'] = ''
root['/untitled_entry/definition'].attrs['EX_required'] = 'true'
 
root['/untitled_entry/untitled_instrument/untitled_detector'].create_dataset(name='data', data=[np.array([[1]])], maxshape=None)
root['/untitled_entry/untitled_instrument/untitled_detector/data'].attrs['type'] = 'NX_INT'
root['/untitled_entry/untitled_instrument/untitled_detector/data'].attrs['units'] = ''
root['/untitled_entry/untitled_instrument/untitled_detector/data'].attrs['EX_required'] = 'true'
root['/untitled_entry/untitled_instrument/untitled_detector/data'].attrs['signal'] = '1'
 
root['/untitled_entry/untitled_sample'].create_dataset(name='rotation_angle', data=[1.], maxshape=None, compression="gzip")
root['/untitled_entry/untitled_sample/rotation_angle'].attrs['type'] = 'NX_FLOAT'
root['/untitled_entry/untitled_sample/rotation_angle'].attrs['units'] = ''
root['/untitled_entry/untitled_sample/rotation_angle'].attrs['EX_required'] = 'true'
root['/untitled_entry/untitled_sample/rotation_angle'].attrs['axis'] = '1'
 
root['/untitled_entry/untitled_monitor'].create_dataset(name='data', data=[1], maxshape=None)
root['/untitled_entry/untitled_monitor/data'].attrs['type'] = 'NX_INT'
root['/untitled_entry/untitled_monitor/data'].attrs['units'] = ''
root['/untitled_entry/untitled_monitor/data'].attrs['EX_required'] = 'true'
root['/untitled_entry/definition'].attrs['EX_doc'] = '     Official NeXus NXDL schema to which this file conforms    '
root['/'].attrs['default'] = 'untitled_entry'
root['/untitled_entry'].attrs['default'] = 'untitled_data'
root.attrs['file_name'] = os.path.abspath('NXscan')
root.attrs['file_time'] = datetime.datetime.now().isoformat()
root.attrs['h5py_version'] = h5py.version.version
root.attrs['HDF5_Version'] = h5py.version.hdf5_version
root.close()


